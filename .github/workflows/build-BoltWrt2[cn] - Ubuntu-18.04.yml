#
# Copyrights © 2017 - 2023 Topstalk. All Rights Reserved.
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/Morton-L/AutoMake-OpenWrt-Firmware-Template
# File: .github/workflows/build-BoltWrt.yml
# Description: Build BoltWrt using GitHub Actions
#

name: 使用Ubuntu-18.04编译BoltWrt2[cn]

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: '交叉编译前通过 SSH 连接至 Actions ?'
        required: false
        default: 'false'

#环境变量
env:
  Project_URL: https://github.com/Morton-L/BoltWrt
  Project_Branch: V2
  CONFIG_FILE: .config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TimeZone: Asia/Shanghai

#工作,多个jobs并行运行
jobs:
  build:
    #指定服务器系统
    runs-on: ubuntu-18.04

    #动作
    steps:
    #动作名称
    - name: Checkout code
      uses: actions/checkout@main

    #初始化环境变量
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget python3-distutils python3-setuptools rsync subversion swig time xsltproc zlib1g-dev libfuse-dev
        sudo timedatectl set-timezone "$TimeZone"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $Project_URL -b $Project_Branch BoltWrt
        chmod -Rf 777 BoltWrt
        ln -sf /workdir/BoltWrt $GITHUB_WORKSPACE/BoltWrt

    - name: 更新 feeds
      run: cd BoltWrt && ./scripts/feeds update -a

    - name: 安装 feeds
      run: cd BoltWrt && chmod -Rf 777 feeds && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files BoltWrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE BoltWrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 下载组件和依赖的源码
      id: package
      run: |
        cd BoltWrt
        make defconfig
        make download -j8

    - name: 交叉编译固件
      id: compile
      run: |
        cd BoltWrt
        echo -e "$(nproc) thread compile"
        make -j $(($(nproc)+1)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传二进制文件
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: BoltWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: BoltWrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd BoltWrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: BoltWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
